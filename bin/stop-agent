#!/bin/bash
set -euo pipefail

usage() {
  cat <<EOF
Usage: stop-agent <agent_id> [--force]

Sends SIGINT to the specified subagent process so its current task cancels
before you resume the session. Pass --force to escalate with SIGTERM if the
agent ignores the interrupt.
EOF
}

AGENT_ID=""
FORCE=false

for arg in "$@"; do
  case "$arg" in
    --force)
      FORCE=true
      ;;
    -h|--help)
      usage
      exit 0
      ;;
    *)
      if [ -z "$AGENT_ID" ]; then
        AGENT_ID="$arg"
      else
        echo "Error: Multiple agent IDs provided" >&2
        usage >&2
        exit 1
      fi
      ;;
  esac
done

if [ -z "$AGENT_ID" ]; then
  usage >&2
  exit 1
fi

REGISTRY="./agent-responses/.active-pids.json"

if [ ! -f "$REGISTRY" ]; then
  echo "Error: Registry not found at $REGISTRY" >&2
  exit 1
fi

NODE_PID=$(jq -r ".\"$AGENT_ID\".nodePid // empty" "$REGISTRY" 2>/dev/null || echo "")

if [ -z "$NODE_PID" ]; then
  NODE_PID=$(jq -r ".\"$AGENT_ID\".pid // empty" "$REGISTRY" 2>/dev/null || echo "")
fi

if [ -z "$NODE_PID" ]; then
  echo "Error: Agent $AGENT_ID not found in registry" >&2
  exit 1
fi

if ! kill -0 "$NODE_PID" 2>/dev/null; then
  echo "Agent $AGENT_ID (PID $NODE_PID) is not running" >&2
  exit 1
fi

echo "Sending SIGINT to agent $AGENT_ID (PID $NODE_PID)..."
kill -INT "$NODE_PID" 2>/dev/null || {
  echo "Error: Failed to send SIGINT to PID $NODE_PID" >&2
  exit 1
}

# Wait briefly to see if the process exits on its own
for _ in {1..10}; do
  if ! kill -0 "$NODE_PID" 2>/dev/null; then
    echo "Agent $AGENT_ID stopped successfully."
    exit 0
  fi
  sleep 0.2
done

if [ "$FORCE" = true ]; then
  echo "SIGINT ignored. Sending SIGTERM to agent $AGENT_ID (PID $NODE_PID)..."
  kill -TERM "$NODE_PID" 2>/dev/null || {
    echo "Error: Failed to send SIGTERM to PID $NODE_PID" >&2
    exit 1
  }

  for _ in {1..10}; do
    if ! kill -0 "$NODE_PID" 2>/dev/null; then
      echo "Agent $AGENT_ID terminated with SIGTERM."
      exit 0
    fi
    sleep 0.2
  done

  echo "Warning: Agent $AGENT_ID still running. Consider sending SIGKILL manually." >&2
  exit 1
else
  echo "Agent $AGENT_ID is still running. Re-run with --force to escalate." >&2
  exit 1
fi
